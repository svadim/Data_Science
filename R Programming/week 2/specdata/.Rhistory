}
}
add2 <- function (x,y) {
add2 <- function (x,y) {
x + y
}
add2(2,3)
add2 <- function (x,y) {
x + y
}
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
airquality
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
formals(columnmean)
formals(add2)
?sd
search()
library(swirl)
search()
?unclass
x <- 1:10
if(x > 5) {x <- 0}
x > 5
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
?cbind
x <- 6
if(x > 5) {x <- 0}
x
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy <- read.cvs("diet_data/Andt.csv")
head(andy)
andy <- read.csv("diet_data/Andt.csv")
head(andy)
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, Weight]
andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[, Day] == 30), "Weight"]
andy[which(andy[, "Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day == 30)
andy_start <- andy[1, "weight"]
andy_end <- andy[30, "weight"]
andy_loss <- andy_start - andy_end
andy_loss
andy_loss <- andy_start - andy_end
andy_loss
andy_loss
andy_start
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss <- andy_start - andy_end
andy_loss
?list.files
files <- list.files("diet_data")
files
files[1]
files[2]
files[3:5]
head(read.csv(files[3]))
files_full <- list.file("diet_data", full.names = TRUE)
files_full <- list.files("diet_data", full.names = TRUE)
files_full
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
andy_david <- rbind(read.csv(files_full[2]), read.csv(files_full[2]))
day_25 <- andy_david[andy_david&Day == 25, ]
day_25
day_25 <- andy_david[andy_david$Day == 25, ]
day_25
for(i in 1:5) {
print(i)
}
for(i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
dat <- data.frame()
for(i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
for(i in 1:5) {
dat2 <- data.frame()
dat2 <- rbind(dat2, read.cvs(files_full[i]))
}
str(dat2)
head(dat2)
for(i in 1:5) {
dat2 <- data.frame()
dat2 <- rbind(dat2, read.csv(files_full[i]))
}
str(dat2)
head(dat2)
media(dat$Weight)
median(dat$Weight)
dat
?median
median(dat$Weight, na.rm = TRUE)
dat_30 <- dat[which(dat$Day == 30), ]
dat_30
median(dat_30$Weight)
View(day_25)
View(dat)
weigthmedian <- function(directory, day){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for(i in 1:5) {
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat$Day == day), ]
median(dat_subset$Weight, na.rm = TRUE)
}
weigthmedian(directory = "diet_data", day = 20)
weigthmedian("diet_data", 4)
weigthmedian("diet_data", 17)
?summary
summary(files_full)
tmp <- vector(mode = "list", length = length(files_full))
summary(tmp)
for(i in seq_along(files_full)) {
tmp[[i]] <- read.csv(files__full[[i]])
}
str(tmp)
for(i in seq_along(files_full)) {
tmp[[i]] <- read.csv(files_full[[i]])
}
str(tmp)
str(lappy(files_full), read.csv)
str(lapply(files_full), read.csv)
str(lapply(files_full, read.csv))
str(tmp[[1]])
head(tmp[[1]][,"Day"])
output <- do.call(rbind, tmp)
str(output)
?read.csv
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
files_full
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean("specdata", "sulfate")
setwd()
setwd("specdata")
x <- setwd("specdata")
getwd
getwd()
setwd()
setwd("")
